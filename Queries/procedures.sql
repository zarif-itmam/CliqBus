-- 1
CREATE OR REPLACE PROCEDURE GET_BUS_COMPANY_RATING(NAME IN VARCHAR2,SCORE OUT NUMBER) IS 
BEGIN 
	INSERT INTO LOG VALUES(SEQ_LOG.NEXTVAL,'GET_BUS_COMPANY_RATING',SYSDATE,NAME);
	COMMIT;
	SELECT NVL(AVG(BUS_RATING),0) 
	INTO SCORE 
	FROM BUS B 
	JOIN BUS_COMPANY BC 
	ON B.BUS_COMPANY_ID=BC.BUS_COMPANY_ID 
	WHERE BC.BUS_COMPANY_NAME=NAME;
END;

-- 2
CREATE OR REPLACE PROCEDURE GET_BUS_COMPANY_REVENUE(NAME IN VARCHAR2,EARNING OUT NUMBER) IS
BEGIN 
	INSERT INTO LOG VALUES(SEQ_LOG.NEXTVAL,'GET_BUS_COMPANY_REVENUE',SYSDATE,NAME);
	COMMIT;
	SELECT NVL(SUM(T.TICKET_PRICE),0) 
	INTO EARNING 
	FROM TICKET T 
	JOIN BUS B 
	ON T.BUS_ID=B.BUS_ID 
	JOIN BUS_COMPANY BC 
	ON B.BUS_COMPANY_ID=BC.BUS_COMPANY_ID 
	WHERE BC.BUS_COMPANY_NAME=NAME;
END;

-- 3 
CREATE OR REPLACE PROCEDURE GET_BUS_COMPANY_TICKETS_SOLD(NAME IN VARCHAR2,CNT OUT NUMBER) IS 
BEGIN 
	INSERT INTO LOG VALUES(SEQ_LOG.NEXTVAL,'GET_BUS_COMPANY_TICKETS_SOLD',SYSDATE,NAME);
	COMMIT;
	SELECT COUNT(T.TICKET_ID) INTO CNT FROM TICKET T JOIN BUS B ON T.BUS_ID=B.BUS_ID JOIN BUS_COMPANY BC ON B.BUS_COMPANY_ID=BC.BUS_COMPANY_ID WHERE BC.BUS_COMPANY_NAME=NAME;
END;

-- 4
CREATE OR REPLACE PROCEDURE GET_BUS_RATING(ID IN NUMBER) IS 
BEGIN 
	INSERT INTO LOG VALUES(SEQ_LOG.NEXTVAL,'GET_BUS_RATING',SYSDATE,ID);
	COMMIT;
	UPDATE BUS 
	SET BUS_RATING=
	(SELECT NVL(ROUND(AVG(SCORE),2),0) FROM REVIEW WHERE BUS_ID=ID)
	WHERE BUS_ID=ID;
END;

